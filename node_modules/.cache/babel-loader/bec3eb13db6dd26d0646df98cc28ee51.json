{"ast":null,"code":"import _slicedToArray from \"/Users/stephenguo/Desktop/react/Upload-Images-to-Firebase-Storage-display-ReactJS/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephenguo/Desktop/react/Upload-Images-to-Firebase-Storage-display-ReactJS/src/index.js\";\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { storage } from \"./firebase\";\n\nconst ReactFirebaseFileUpload = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        url = _useState4[0],\n        setUrl = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        progress = _useState6[0],\n        setProgress = _useState6[1];\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  console.log(\"image: \", image);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"progress\", {\n    value: progress,\n    max: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), url, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: url || \"http://via.placeholder.com/300\",\n    alt: \"firebase-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nrender(React.createElement(ReactFirebaseFileUpload, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/stephenguo/Desktop/react/Upload-Images-to-Firebase-Storage-display-ReactJS/src/index.js"],"names":["React","useState","render","storage","ReactFirebaseFileUpload","image","setImage","url","setUrl","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA,oBACVH,QAAQ,CAAC,IAAD,CADE;AAAA;AAAA,QAC7BI,KAD6B;AAAA,QACtBC,QADsB;;AAAA,qBAEdL,QAAQ,CAAC,EAAD,CAFM;AAAA;AAAA,QAE7BM,GAF6B;AAAA,QAExBC,MAFwB;;AAAA,qBAGJP,QAAQ,CAAC,CAAD,CAHJ;AAAA;AAAA,QAG7BQ,QAH6B;AAAA,QAGnBC,WAHmB;;AAKpC,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBR,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGb,OAAO,CAACc,GAAR,kBAAsBZ,KAAK,CAACa,IAA5B,GAAoCC,GAApC,CAAwCd,KAAxC,CAAnB;AACAW,IAAAA,UAAU,CAACI,EAAX,CACE,eADF,EAEEC,QAAQ,IAAI;AACV,YAAMZ,QAAQ,GAAGa,IAAI,CAACC,KAAL,CACdF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADrC,CAAjB;AAGAf,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAPH,EAQEiB,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH,EAWE,MAAM;AACJvB,MAAAA,OAAO,CACJc,GADH,CACO,QADP,EAEGY,KAFH,CAESxB,KAAK,CAACa,IAFf,EAGGY,cAHH,GAIGC,IAJH,CAIQxB,GAAG,IAAI;AACXC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACD,OANH;AAOD,KAnBH;AAqBD,GAvBD;;AAyBAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBvB,KAAvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,KAAK,EAAEI,QAAjB;AAA2B,IAAA,GAAG,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGR,GAPH,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAK,IAAA,GAAG,EAAEA,GAAG,IAAI,gCAAjB;AAAmD,IAAA,GAAG,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAnDD;;AAqDAL,MAAM,CAAC,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAA8B8B,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAA9B,CAAN","sourcesContent":["import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { storage } from \"./firebase\";\n\nconst ReactFirebaseFileUpload = () => {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url);\n          });\n      }\n    );\n  };\n\n  console.log(\"image: \", image);\n\n  return (\n    <div>\n      <progress value={progress} max=\"100\" />\n      <br />\n      <br />\n      <input type=\"file\" onChange={handleChange} />\n      <button onClick={handleUpload}>Upload</button>\n      <br />\n      {url}\n      <br />\n      <img src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\" />\n    </div>\n  );\n};\n\nrender(<ReactFirebaseFileUpload />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}